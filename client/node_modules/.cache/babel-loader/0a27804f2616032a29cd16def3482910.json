{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajays\\\\Desktop\\\\ManitVerse\\\\MANIT_VERSE\\\\client\\\\src\\\\components\\\\auth\\\\VerifyEmail.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport './VerifyEmail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyEmail = ({\n  email,\n  password,\n  login\n}) => {\n  _s();\n  const [code, setCode] = useState('');\n  const [msg, setMsg] = useState('');\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/users/verify-email', {\n        email,\n        code\n      });\n      setMsg('Email verified! Logging you in...');\n      await login(email, password); // Auto-login after verification\n    } catch (err) {\n      setMsg('Invalid or expired code.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"otp-form\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"otp-input\",\n      type: \"text\",\n      placeholder: \"Enter code\",\n      value: code,\n      onChange: e => setCode(e.target.value),\n      maxLength: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"otp-btn\",\n      type: \"submit\",\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"otp-msg\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyEmail, \"+1zJ7qzWw+oPaGZ4QZlI3dje91c=\");\n_c = VerifyEmail;\nVerifyEmail.propTypes = {\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  login: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  login\n})(VerifyEmail);\nvar _c;\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"names":["React","useState","axios","connect","login","PropTypes","jsxDEV","_jsxDEV","VerifyEmail","email","password","_s","code","setCode","msg","setMsg","onSubmit","e","preventDefault","post","err","className","children","type","placeholder","value","onChange","target","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","func","$RefreshReg$"],"sources":["C:/Users/ajays/Desktop/ManitVerse/MANIT_VERSE/client/src/components/auth/VerifyEmail.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport './VerifyEmail.css';\r\n\r\nconst VerifyEmail = ({ email, password, login }) => {\r\n  const [code, setCode] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/api/users/verify-email', { email, code });\r\n      setMsg('Email verified! Logging you in...');\r\n      await login(email, password); // Auto-login after verification\r\n    } catch (err) {\r\n      setMsg('Invalid or expired code.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"otp-form\" onSubmit={onSubmit}>\r\n      <input\r\n        className=\"otp-input\"\r\n        type=\"text\"\r\n        placeholder=\"Enter code\"\r\n        value={code}\r\n        onChange={e => setCode(e.target.value)}\r\n        maxLength={6}\r\n      />\r\n      <button className=\"otp-btn\" type=\"submit\">Verify</button>\r\n      {msg && <p className=\"otp-msg\">{msg}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nVerifyEmail.propTypes = {\r\n  email: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired,\r\n  login: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { login })(VerifyEmail);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEN;AAAM,CAAC,KAAK;EAAAO,EAAA;EAClD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMe,QAAQ,GAAG,MAAMC,CAAC,IAAI;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMhB,KAAK,CAACiB,IAAI,CAAC,yBAAyB,EAAE;QAAEV,KAAK;QAAEG;MAAK,CAAC,CAAC;MAC5DG,MAAM,CAAC,mCAAmC,CAAC;MAC3C,MAAMX,KAAK,CAACK,KAAK,EAAEC,QAAQ,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZL,MAAM,CAAC,0BAA0B,CAAC;IACpC;EACF,CAAC;EAED,oBACER,OAAA;IAAMc,SAAS,EAAC,UAAU;IAACL,QAAQ,EAAEA,QAAS;IAAAM,QAAA,gBAC5Cf,OAAA;MACEc,SAAS,EAAC,WAAW;MACrBE,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEb,IAAK;MACZc,QAAQ,EAAET,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MACvCG,SAAS,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACFzB,OAAA;MAAQc,SAAS,EAAC,SAAS;MAACE,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxDlB,GAAG,iBAAIP,OAAA;MAAGc,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAER;IAAG;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEX,CAAC;AAACrB,EAAA,CA7BIH,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AA+BjBA,WAAW,CAAC0B,SAAS,GAAG;EACtBzB,KAAK,EAAEJ,SAAS,CAAC8B,MAAM,CAACC,UAAU;EAClC1B,QAAQ,EAAEL,SAAS,CAAC8B,MAAM,CAACC,UAAU;EACrChC,KAAK,EAAEC,SAAS,CAACgC,IAAI,CAACD;AACxB,CAAC;AAED,eAAejC,OAAO,CAAC,IAAI,EAAE;EAAEC;AAAM,CAAC,CAAC,CAACI,WAAW,CAAC;AAAC,IAAAyB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}