{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from './types';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User (updated for OTP verification)\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'content-type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n  try {\n    await axios.post('/api/users', body, config);\n\n    // Do NOT dispatch REGISTER_SUCCESS or loadUser here!\n    // Just show a success alert, UI will show OTP form\n    dispatch(setAlert('Registration successful. Check your email for the verification code.', 'success'));\n  } catch (err) {\n    const errors = err.response && err.response.data && err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response && err.response.data && err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","setAlert","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logout"],"sources":["C:/Users/ajays/Desktop/ManitVerse/MANIT_VERSE/client/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from './types';\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n// Register User (updated for OTP verification)\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: { 'content-type': 'application/json' }\r\n  };\r\n  const body = JSON.stringify({ name, email, password });\r\n  try {\r\n    await axios.post('/api/users', body, config);\r\n\r\n    // Do NOT dispatch REGISTER_SUCCESS or loadUser here!\r\n    // Just show a success alert, UI will show OTP form\r\n    dispatch(setAlert('Registration successful. Check your email for the verification code.', 'success'));\r\n  } catch (err) {\r\n    const errors = err.response && err.response.data && err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response && err.response.data && err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}